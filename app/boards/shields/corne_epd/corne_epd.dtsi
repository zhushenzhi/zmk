/*
 * Copyright (c) 2020 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zephyr,display = &shield_epd;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <4>;
// | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |   | SW6  | SW5  | SW4  | SW3  | SW2  | SW1  |
// | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW12 | SW11 | SW10 | SW9  | SW8  | SW7  |
// | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |   | SW18 | SW17 | SW16 | SW15 | SW14 | SW13 |
//                      | SW19 | SW20 | SW21 |   | SW21 | SW20 | SW19 |
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
                        RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(3,7) RC(3,8)
        >;
    };

    five_column_transform: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <4>;
// | SW2  | SW3  | SW4  | SW5  | SW6  |   | SW6  | SW5  | SW4  | SW3  | SW2  |
// | SW8  | SW9  | SW10 | SW11 | SW12 |   | SW12 | SW11 | SW10 | SW9  | SW8  |
// | SW14 | SW15 | SW16 | SW17 | SW18 |   | SW18 | SW17 | SW16 | SW15 | SW14 |
//                      | SW19 | SW20 | SW21 |   | SW21 | SW20 | SW19 |
        map = <
RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)  RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10)
RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)  RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10)
RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)  RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10)
                        RC(3,3) RC(3,4) RC(3,5)  RC(3,6) RC(3,7) RC(3,8)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";

        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;

    };

    // TODO: per-key RGB node(s)?
};

// &pro_micro_i2c {
//     status = "okay";
//     oled: ssd1306@3c {
//         compatible = "solomon,ssd1306fb";
//         reg = <0x3c>;
//         label = "DISPLAY";
//         width = <128>;
//         height = <64>;
//         segment-offset = <0>;
//         page-offset = <0>;
//         display-offset = <0>;
//         multiplex-ratio = <63>;
//         //segment-remap;
//         com-invdir;  
//         //com-sequential;
//         prechargep = <0x22>;
//     };
// }; 


/* display */
&pro_micro_spi {
    // &spi2 {
      compatible = "nordic,nrf-spim";
      sck-pin = <22>;  //scl 22
      mosi-pin = <24>; // sda 24
      cs-gpios = <&gpio0 20 GPIO_ACTIVE_LOW>; //20
      // not used, but required by spim binding; can be reuesd in the keymap for normal key press
      miso-pin = <10>;    
      // activate this device
      status = "okay";   

      shield_epd: ssd16xx@0 {  //todo  il0323@0 try 0
        status = "okay";   
        compatible = "solomon,ssd1681";//todo
        reg = <0>;  //todo  reg = <0>
    // shield_epd: ssd16xx@0 {  //todo  il0323@0 try 0
    //     compatible = "solomon,ssd1681";//todo
    //     reg = <0>;  //todo  reg = <0>
        label = "DISPLAY";
        spi-max-frequency = <4000000>;
        // interrupts = ;
        height = <200>;
        width = <200>;
        sck-pin = <22>;  //scl 22 <&gpio0 22 GPIO_ACTIVE_LOW>; 
        mosi-pin = <24>; // sda 24  <&gpio0 24 GPIO_ACTIVE_LOW>; 
        cs-gpios = <&gpio0 20 GPIO_ACTIVE_LOW>; //20
        reset-gpios = <&gpio0 8  GPIO_ACTIVE_LOW>;
        dc-gpios    = <&gpio0 17 GPIO_ACTIVE_LOW>; //17
        busy-gpios  = <&gpio0 6  GPIO_ACTIVE_LOW>;
        // pwr = [03 00 26 26];  //todo  Power Setting (PWR) values
        // cdi = <0xd2>;         //todo  VCOM and data interval value
        // tcon = <0x22>;        //todo  TCON setting value
      }; 
    };
    